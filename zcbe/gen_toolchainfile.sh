#!/bin/sh

mkdir -p "${ZCPREF}/tmp"
cat > "${ZCPREF}/tmp/toolchain.cmake" << EOF
set(CMAKE_BUILD_TYPE Release)

set(CMAKE_CROSSCOMPILING True)
set(CMAKE_SYSTEM_NAME Windows)
set(CMAKE_SYSTEM_PROCESSER $(echo "${ZCHOST}"|cut -f1 -d-))

set(CMAKE_FIND_ROOT_PATH ${ZCPREF})
set(CMAKE_INSTALL_PREFIX ${ZCPREF})

set(LLVM_DEFAULT_TARGET_TRIPLE ${ZCHOST})
set(CMAKE_C_COMPILER ${ZCHOST}-gcc)
set(CMAKE_CXX_COMPILER ${ZCHOST}-g++)
set(CMAKE_FORTRAN_COMPILER ${ZCHOST}-gfortran)
set(CMAKE_Fortran_COMPILER ${ZCHOST}-gfortran)
set(CMAKE_RC_COMPILER ${ZCHOST}-windres)
#set(CMAKE_C_FLAGS "-static-libgcc -static-libstdc++ \${CMAKE_C_FLAGS}")
set(CMAKE_C_FLAGS "-I${ZCPREF}/include -DDBL_EPSILON=__DBL_EPSILON__ -DFLT_EPSILON=__FLT_EPSILON__ -DLDBL_EPSILON=__LDBL_EPSILON__ \${CMAKE_C_FLAGS}")
#set(CMAKE_CXX_FLAGS "-static-libgcc -static-libstdc++ \${CMAKE_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS "-I${ZCPREF}/include -DDBL_EPSILON=__DBL_EPSILON__ -DFLT_EPSILON=__FLT_EPSILON__ -DLDBL_EPSILON=__LDBL_EPSILON__ \${CMAKE_CXX_FLAGS}")
set(CMAKE_EXE_LINKER_FLAGS "-lssp \${CMAKE_EXE_LINKER_FLAGS}")
set(CMAKE_SHARED_LINKER_FLAGS "-lssp \${CMAKE_SHARED_LINKER_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS "-lssp \${CMAKE_MODULE_LINKER_FLAGS}")
link_libraries("-lssp")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
EOF
