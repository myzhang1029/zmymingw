# This is a basic workflow to help you get started with Actions

name: Build zmymingw

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        host_trip: ["x86_64-w64-mingw32", "i686-w64-mingw32"]

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install dependencies, python, ZCBE, mingw and others
      - name: Install dependencies
        run: |
          sudo apt-get -q update
          sudo apt-get install -yq po4a build-essential docbook2x sphinx-doc file curl \
          mingw-w64 nasm wine-stable tcl rsync autopoint cmake autoconf automake libtool \
          gettext texinfo pkg-config texi2html groff asciidoc xmlto python3 python3-pip \
          perl imagemagick meson ninja-build bison flex gfortran-mingw-w64 gperf \
          docbook-utils help2man ed autoconf-archive fig2dev lua5.1 lua-mpack lua-bitop \
          libtool-bin ccache
          python3 -m pip install zcbe==v0.5.0

      - name: Check out submodules
        run: |
          git submodule init
          git submodule update
          
      # Set build.toml
      - name: Set build parameters
        env:
          HOST_TRIP: ${{ matrix.host_trip }}
        run: sh set_up_ghaction.sh

      - name: Ccache
        uses: actions/cache@v2
        with:
          path: /home/runner/.ccache
          key: ccache:${{ matrix.host_trip}}:${{ github.ref }}:${{ github.sha }}
          restore-keys: |
            ccache:${{ matrix.host_trip}}:${{ github.ref }}
            ccache:${{ matrix.host_trip}}

      # Whatever it built is considered as success
      - name: Build
        run: |
          sh -c 'python3 -m zcbe -sayj8 || true'
          cd /home/runner/artifact
          tar -Jcf ${{ matrix.host_trip }}.tar.xz ${{ matrix.host_trip }}

      - name: Upload Result
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ matrix.host_trip }}.tar.xz
          path: /home/runner/artifact/${{ matrix.host_trip }}.tar.xz
